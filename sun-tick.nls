;;
;; how to use
;;
;; include this file as-is in the same directory as your main .nlogo file
;; in globals statement, add a lines
;;            ticks-in-a-day
;;            sun-track-radius
;;
;; ... and set these in an appropriate setup procedure
;;             ticks-in-a-day : tick = 0 is midnight
;;             sun-track-radius : this is built for origin = (0, 0), sun will circle the origin at this distance, set in setup-sun
;;
;; call setup-sun in some setup routine, once at the beginning
;;
;; call locate-sun each tick to position sun in the right place
;;
;; put the following line at the bottom (excluding comment semicolons
;;               __includes ["sun-tick.nls"]
;;
breed [suns sun]

;
; sun is a clock
;
to setup-sun
  set ticks-in-a-day 250                    ;; could be set in main code, or interface, adjust therefore
  set sun-track-radius max-pxcor - 1.5

  create-suns 1 [
    set shape "face happy"
    ;setxy 0 (-1 * sun-track-radius)
    locate-sun 0
    ]
    
  end
  
  
to tick-sun
  ;
  ; runs "backwards" so negate ticks in call
  ;
  ask suns [
    locate-sun (-1 * ticks)
    ]
  end

;
; starts at heading 180, goes "backwards"
;
to locate-sun [sun-ticks]
  let angle (-90 + ( (sun-ticks mod ticks-in-a-day) / ticks-in-a-day ) * 360)
  ;let sun-hour (((-1 * sun-ticks) / ticks-in-a-day ) * 24) mod 24
  let sun-hour (( ticks / ticks-in-a-day ) * 24) mod 24
  let sun-min substring (word (100 + ((ticks / ticks-in-a-day) - floor (ticks / ticks-in-a-day)) * (24 * 60) mod 60)) 1 3
  ;setxy (max-pxcor * cos (angle)) (max-pycor * sin (angle))
  setxy (sun-track-radius * cos (angle)) (sun-track-radius * sin (angle))
  set color yellow + (2 * sin (angle))
  ;set label  ( word floor(sun-hour) ":" sun-min "\n\t\t")
  set label  ( word floor(sun-hour) ":" sun-min "\n__")
  ;set label  ( word "\t\t\t\t\t\n"  floor(sun-hour) ":" sun-min )
  set label-color black
  ;let try (substring (word (100 + sun-min)) 1 3)
  ;output-show (word "sun-ticks " sun-ticks " ticks-in-a-day " ticks-in-a-day)  
  ;output-show (word "hour " sun-hour " min " sun-min " try " )
  end
